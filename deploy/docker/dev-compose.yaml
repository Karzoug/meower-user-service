services:
  postgres:
    image: postgres:17-alpine
    command: ["-c", "wal_level=logical", "-c", "max_wal_senders=10", "-c", "max_replication_slots=10"]
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: meower
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", 'pg_isready -U user -d meower']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/dev-prom.yaml'
    ports:
       - 9090:9090
    restart: unless-stopped
    volumes:
      - ./../metric/dev:/etc/prometheus

  jaeger:
    image: jaegertracing/all-in-one:1.60
    container_name: jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    hostname: jaeger
    ports:
      - 16686:16686
    #   - 4317:4317
    #   - 4318:4318
    #   - 14268:14268
    restart: unless-stopped

  user-service:
    depends_on:
      postgres:
        condition: service_healthy
      jaeger:
        condition: service_started
      prometheus:
        condition: service_started
    image: ${IMAGE}
    container_name: user-service
    environment:
      OTLP_PROBABILITY: 1
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4318
      OTEL_EXPORTER_OTLP_INSECURE: true
      LOG_LEVEL: debug
      PG_URI: postgresql://user:password@postgres:5432/meower?sslmode=disable
    ports:
       - 3001:3001
       - 3002:3002
    restart: unless-stopped